package pack;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddMember.java
 *
 * Created on Sep 16, 2012, 6:33:19 AM
 */

/**
 *
 * @author shyam
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
public class AddMemberFromLottery extends javax.swing.JInternalFrame
{

    /** Creates new form AddMember */
    JFrame mainframe;
    int member_id;
    Vector recurring,nonrecurring,date,oldmember,oldmemberid;
    int arr[]=null;
    public AddMemberFromLottery(JFrame mainframe)
    {
        super("Add New Member",true,true,true,true);
        this.mainframe=mainframe;
        recurring=new Vector();
        nonrecurring=new Vector();
        oldmember=new Vector();
        oldmemberid=new Vector();
        date=new Vector();
        initComponents();
        l_memberid.setText("Member ID : "+lottery.elementAt(c_lottery.getSelectedIndex())+"-"+member_id);
        l_date.setText(""+DateConverter.toDDMMYYYY((String)date.elementAt(c_lottery.getSelectedIndex()))
);
            Dbcon db=new Dbcon();
            db.connect();
            oldmember.clear();
            oldmemberid.clear();
            try
            {
                db.rslt=db.stmt.executeQuery("select member_id,member_no from memberaccount where lottery_no='"+oldlottery.elementAt(c_oldlottery.getSelectedIndex())+"'");
                while(db.rslt.next())
                {
                    oldmemberid.addElement(db.rslt.getString(1));
                    oldmember.addElement(db.rslt.getString(2));
                }
                c_oldmember.setModel(new DefaultComboBoxModel(oldmember.toArray()));
                db.rslt=db.stmt.executeQuery("select name,f_name,address,contact_no from memberinfo where member_id="+oldmemberid.elementAt(c_oldmember.getSelectedIndex()));
                while(db.rslt.next())
                {
                    tf_name.setText(db.rslt.getString(1));
                    tf_fname.setText(db.rslt.getString(2));
                    tf_address.setText(db.rslt.getString(3));
                    tf_contact.setText(db.rslt.getString(4));
                    tf_person.setText("");
                   // oldmember.addElement(db.rslt.getString(1));
                }

            }
            catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
            db.disconnect();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tf_fname = new javax.swing.JTextField();
        Dbcon db=new Dbcon();
        db.connect();
        try
        {
            db.rslt=db.stmt.executeQuery("select lottery_no,recurring,nonrecurring,date from lottery where status=1");
            while(db.rslt.next())
            {
                lottery.addElement(db.rslt.getString(1));
                recurring.addElement(db.rslt.getString(2));
                nonrecurring.addElement(db.rslt.getString(3));
                date.addElement(db.rslt.getString(4));
            }

        }
        catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
        db.disconnect();
        c_lottery = new javax.swing.JComboBox();
        l_memberid = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tf_person = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tf_address = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tf_contact = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tf_amount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tf_tamount = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        bt_date = new javax.swing.JButton();
        tf_date = new javax.swing.JTextField();
        l_date = new javax.swing.JLabel();
        //Dbcon db=new Dbcon();
        db.connect();
        try
        {
            db.rslt=db.stmt.executeQuery("select lottery_no from lottery ");
            while(db.rslt.next())
            {
                oldlottery.addElement(db.rslt.getString(1));

            }

        }
        catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
        db.disconnect();
        c_oldlottery = new javax.swing.JComboBox();
        c_oldmember = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(734, 560));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Member From Another Lottery");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel2.setText("Enter Member Name :");

        tf_name.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel3.setText("Father Name :");

        tf_fname.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_fname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fnameActionPerformed(evt);
            }
        });

        c_lottery.setModel(new javax.swing.DefaultComboBoxModel(lottery.toArray()));
        c_lottery.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c_lotteryItemStateChanged(evt);
            }
        });
        //Dbcon db=new Dbcon();
        db.connect();
        try
        {
            System.out.println("11");
            db.rslt=db.stmt.executeQuery("select member_no from memberaccount where lottery_no='"+lottery.elementAt(c_lottery.getSelectedIndex())+"'");
            int mid=0;

            while(db.rslt.next())
            {
                System.out.println("11");
                mid=Integer.valueOf(db.rslt.getString(1));
            }
            mid++;
            System.out.println(mid);
            member_id=mid;
            l_memberid.setText("Member ID : "+lottery.elementAt(c_lottery.getSelectedIndex())+"-"+mid);
        }
        catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
        db.disconnect();

        l_memberid.setFont(new java.awt.Font("Tahoma", 1, 14));
        l_memberid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_memberid.setText("Member ID ");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel4.setText("No.Of Person :");

        tf_person.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_person.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_person.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_personActionPerformed(evt);
            }
        });
        tf_person.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_personKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_personKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel5.setText("Address :");

        tf_address.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_address.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_addressActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel6.setText("Contact No. :");

        tf_contact.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_contact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_contactActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel8.setText("Initial Deposite :");

        tf_amount.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_amount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_amountActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel9.setText("Total Deposite :");

        tf_tamount.setEditable(false);
        tf_tamount.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_tamount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_tamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_tamountActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel10.setText("Select  Date :");

        bt_date.setText("...");
        bt_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_dateActionPerformed(evt);
            }
        });

        tf_date.setEditable(false);
        tf_date.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_dateActionPerformed(evt);
            }
        });

        l_date.setFont(new java.awt.Font("Tahoma", 0, 16));

        c_oldlottery.setModel(new javax.swing.DefaultComboBoxModel(oldlottery.toArray()));
        c_oldlottery.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c_oldlotteryItemStateChanged(evt);
            }
        });

        c_oldmember.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        c_oldmember.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c_oldmemberItemStateChanged(evt);
            }
        });

        jLabel12.setText("To");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tf_address, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_person, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tf_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_date, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_tamount, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_memberid, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(c_oldlottery, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(c_oldmember, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_date, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c_lottery, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(l_memberid, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(c_oldlottery, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(c_oldmember, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(l_date, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(c_lottery, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_person, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_date)
                        .addComponent(bt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_tamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(89, 89, 89))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nameActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tf_nameActionPerformed

    private void tf_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fnameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Dbcon db=new Dbcon();
        db.connect();

        if(tf_name.getText().equals(""))
        {
            JOptionPane.showMessageDialog(mainframe,"Enter Member Name ","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(tf_fname.getText().equals(""))
        {
            JOptionPane.showMessageDialog(mainframe,"Enter Father's Name ","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(tf_person.getText().equals(""))
        {
            JOptionPane.showMessageDialog(mainframe,"Enter Enter No Of Person","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(tf_date.getText().equals(""))
        {
            JOptionPane.showMessageDialog(mainframe,"Select Date ","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(tf_amount.getText().equals(""))
        {
            JOptionPane.showMessageDialog(mainframe,"Enter Initial Deposit","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        int t1=0;
        try {
            t1=1;
            int i1=Integer.valueOf(tf_person.getText());
            t1=2;
            int i2=Integer.valueOf(tf_tamount.getText());
            t1=3;
            int i3=Integer.valueOf(tf_amount.getText());
            t1=4;
            if(i3<i2)
            {
                JOptionPane.showMessageDialog(mainframe,"You Can Not Take Less Amount","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            db.stmt.executeUpdate("insert into memberaccount(lottery_no,member_no,person,date,status) values('"+lottery.elementAt(c_lottery.getSelectedIndex())+"',"+member_id+","+tf_person.getText()+",'"+DateConverter.toYYYYMMDD(tf_date.getText())+"',1)");
            db.rslt=db.stmt.executeQuery("select member_id from memberaccount where lottery_no='"+lottery.elementAt(c_lottery.getSelectedIndex())+"' && member_no="+member_id);
            int mid=0;
            if(db.rslt.next())
            {
                mid=Integer.valueOf(db.rslt.getString(1));
                db.stmt.executeUpdate("insert into memberinfo(member_id,name,f_name,address,contact_no,status) values("+mid+",'"+tf_name.getText()+"','"+tf_fname.getText()+"','"+tf_address.getText()+"','"+tf_contact.getText()+"',1)");
            }
            db.stmt.executeUpdate("insert into nonrecurring(member_id,date,amount,lottery_no) values("+mid+",'"+DateConverter.toYYYYMMDD(tf_date.getText())+"',"+Integer.parseInt(tf_person.getText())*Integer.parseInt(""+nonrecurring.elementAt(c_lottery.getSelectedIndex()))+",'"+lottery.elementAt(c_lottery.getSelectedIndex())+"')");
            {
                db.rslt=db.stmt.executeQuery("select investor_id from investoraccount where lottery_no='"+lottery.elementAt(c_lottery.getSelectedIndex())+"' and investor_no=1000");
                db.rslt.next();
                String inv_id=db.rslt.getString(1);
                db.rslt=db.stmt.executeQuery("select balance,date from investsheet where investor_id="+inv_id);
                int invbal=0;
                int invintadd=0;
                String dateinv="";
                while(db.rslt.next())
                {
                    if(db.rslt.getString(1)!=null)
                        invbal=Integer.parseInt(db.rslt.getString(1));
                    if(db.rslt.getString(2)!=null)
                        dateinv=db.rslt.getString(2);
                }
                if(!dateinv.equals(""))
                {
                    invintadd=(int)(Result.interest(dateinv,DateConverter.toYYYYMMDD(tf_date.getText()), invbal));
                }
                int invnr=Integer.parseInt(tf_person.getText())*Integer.parseInt(""+nonrecurring.elementAt(c_lottery.getSelectedIndex()));
                int invbaln=invbal+invnr+invintadd;
                db.stmt.executeUpdate("insert into investsheet(lottery_no,investor_id,date,debit,credit,interest,balance,member_id) "+

                           "values('"+lottery.elementAt(c_lottery.getSelectedIndex())+"',"+inv_id+",'"+DateConverter.toYYYYMMDD(tf_date.getText())+"',0,"+invnr+","+invintadd+","+invbaln+","+mid+")");
            }
            int rec=arr[1]-Integer.parseInt(tf_person.getText())*Integer.parseInt(""+nonrecurring.elementAt(c_lottery.getSelectedIndex()));
            int fn=Integer.parseInt(tf_amount.getText())-arr[1];
            int order=1;
            db.rslt=db.stmt.executeQuery("select max(order1) from sheet where lottery_no='"+lottery.elementAt(c_lottery.getSelectedIndex())+"' and date='"+DateConverter.toYYYYMMDD(tf_date.getText())+"'");
            if(db.rslt.next())
            {
                if(db.rslt.getString(1)!=null)
                    order=Integer.parseInt(db.rslt.getString(1))+1;
            }
            db.stmt.executeUpdate("insert into sheet(lottery_no,member_id,date,recurring,fine,total,balance,month,order1) values('"+lottery.elementAt(c_lottery.getSelectedIndex())+"',"+mid+",'"+DateConverter.toYYYYMMDD(tf_date.getText())+"','"+rec+"','"+fn+"','"+(rec+fn)+"','0',"+arr[3]+","+order+")");

            db.conn.commit();
            tf_name.setText("");
            tf_fname.setText("");

           // tf_date.setText("");

            tf_address.setText("");

            tf_person.setText("");
            tf_amount.setText("");

            tf_tamount.setText("");
            tf_contact.setText("");
            member_id++;
            l_memberid.setText("Member ID : "+lottery.elementAt(c_lottery.getSelectedIndex())+"-"+member_id);
            JOptionPane.showMessageDialog(mainframe,"Member Successfully Added!");
        } catch(Exception e){
            try
            {
                db.conn.rollback();
            }catch(Exception e1){System.out.println(e1);}
            if(t1==1)
            {
                JOptionPane.showMessageDialog(mainframe,"Enter No Of Person In Numeric !","Error",JOptionPane.ERROR_MESSAGE);System.out.println(e);
                return;
            }
            else if(t1==2)
            {
                JOptionPane.showMessageDialog(mainframe,"Enter Amount Calculation  In Numeric !","Error",JOptionPane.ERROR_MESSAGE);System.out.println(e);
                return;
            }
            else if(t1==3)
            {
                JOptionPane.showMessageDialog(mainframe,"Enter Amount In Numeric !","Error",JOptionPane.ERROR_MESSAGE);System.out.println(e);
                return;
            }
            else
            JOptionPane.showMessageDialog(mainframe,"Member Can Not Be Added !");System.out.println(e);}
        db.disconnect();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void c_lotteryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c_lotteryItemStateChanged
        // TODO add your handling code here:
        Dbcon db=new Dbcon();
        db.connect();
        try
        {
            
            db.rslt=db.stmt.executeQuery("select member_no from memberaccount where lottery_no='"+lottery.elementAt(c_lottery.getSelectedIndex())+"'");
            int mid=0;
            while(db.rslt.next())
            {
                mid=Integer.valueOf(db.rslt.getString(1));
            }
            mid++;
            member_id=mid;
            l_memberid.setText("Member ID : "+lottery.elementAt(c_lottery.getSelectedIndex())+"-"+mid);
            l_date.setText(""+DateConverter.toDDMMYYYY((String)date.elementAt(c_lottery.getSelectedIndex()))
);
}
        catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
        db.disconnect();
    }//GEN-LAST:event_c_lotteryItemStateChanged

    private void tf_personActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_personActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_personActionPerformed

    private void tf_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_addressActionPerformed

    private void tf_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_contactActionPerformed

    private void tf_amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_amountActionPerformed

    private void tf_tamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_tamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_tamountActionPerformed

    private void bt_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_dateActionPerformed
        // TODO add your handling code here:
        tf_date.setText(DateConverter.toDDMMYYYY(new DatePicker(mainframe).setPickedDate()));
        try {
            int i=Integer.valueOf(tf_person.getText());
        }catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Enter Person In Numeric !","Error",JOptionPane.ERROR_MESSAGE);return;}
        if(tf_date.getText().equals("")) {
            JOptionPane.showMessageDialog(mainframe,"Select date !","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        arr=Result.initialdesposite(""+date.elementAt(c_lottery.getSelectedIndex()), DateConverter.toYYYYMMDD(tf_date.getText()),Integer.parseInt(""+recurring.elementAt(c_lottery.getSelectedIndex())),Integer.parseInt(""+nonrecurring.elementAt(c_lottery.getSelectedIndex())),Integer.parseInt(tf_person.getText()));
        if(arr==null)
        {
            tf_tamount.setText("");
            JOptionPane.showMessageDialog(mainframe,"Error In Selecting date !","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        tf_tamount.setText(arr[0]+"");


}//GEN-LAST:event_bt_dateActionPerformed

    private void tf_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_dateActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tf_dateActionPerformed

    private void tf_personKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_personKeyPressed
        // TODO add your handling code here:
        //tf_date.setText("");
        //tf_tamount.setText("");
    }//GEN-LAST:event_tf_personKeyPressed

    private void tf_personKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_personKeyReleased
        // TODO add your handling code here:
        if(!tf_date.getText().equals(""))
        {
            try {
                    int i=Integer.valueOf(tf_person.getText());
                }catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Enter Person In Numeric !","Error",JOptionPane.ERROR_MESSAGE);return;}
                if(tf_date.getText().equals("")) {
                    JOptionPane.showMessageDialog(mainframe,"Select date !","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                arr=Result.initialdesposite(""+date.elementAt(c_lottery.getSelectedIndex()), DateConverter.toYYYYMMDD(tf_date.getText()),Integer.parseInt(""+recurring.elementAt(c_lottery.getSelectedIndex())),Integer.parseInt(""+nonrecurring.elementAt(c_lottery.getSelectedIndex())),Integer.parseInt(tf_person.getText()));
                if(arr==null)
                {
                    tf_tamount.setText("");
                    JOptionPane.showMessageDialog(mainframe,"Error In Selecting date !","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                tf_tamount.setText(arr[0]+"");
        }
    }//GEN-LAST:event_tf_personKeyReleased

    private void c_oldlotteryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c_oldlotteryItemStateChanged
        // TODO add your handling code here:
        Dbcon db=new Dbcon();
            db.connect();
            oldmember.clear();
            oldmemberid.clear();
            try
            {
                db.rslt=db.stmt.executeQuery("select member_id,member_no from memberaccount where lottery_no='"+oldlottery.elementAt(c_oldlottery.getSelectedIndex())+"'");
                while(db.rslt.next())
                {
                    oldmemberid.addElement(db.rslt.getString(1));
                    oldmember.addElement(db.rslt.getString(2));
                }
                c_oldmember.setModel(new DefaultComboBoxModel(oldmember.toArray()));
                db.rslt=db.stmt.executeQuery("select name,f_name,address,contact_no from memberinfo where member_id="+oldmemberid.elementAt(c_oldmember.getSelectedIndex()));
                while(db.rslt.next())
                {
                    tf_name.setText(db.rslt.getString(1));
                    tf_fname.setText(db.rslt.getString(2));
                    tf_address.setText(db.rslt.getString(3));
                    tf_contact.setText(db.rslt.getString(4));
                    tf_person.setText("");
                   // oldmember.addElement(db.rslt.getString(1));
                }

            }
            catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
            db.disconnect();
    }//GEN-LAST:event_c_oldlotteryItemStateChanged

    private void c_oldmemberItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c_oldmemberItemStateChanged
        // TODO add your handling code here:
        Dbcon db=new Dbcon();
            db.connect();
            try
            {
                db.rslt=db.stmt.executeQuery("select name,f_name,address,contact_no from memberinfo where member_id="+oldmemberid.elementAt(c_oldmember.getSelectedIndex()));
                while(db.rslt.next())
                {
                    tf_name.setText(db.rslt.getString(1));
                    tf_fname.setText(db.rslt.getString(2));
                    tf_address.setText(db.rslt.getString(3));
                    tf_contact.setText(db.rslt.getString(4));
                    tf_person.setText("");
                   // oldmember.addElement(db.rslt.getString(1));
                }

            }
            catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
            db.disconnect();
    }//GEN-LAST:event_c_oldmemberItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_date;
    private javax.swing.JComboBox c_lottery;
    java.util.Vector lottery=new java.util.Vector();
    private javax.swing.JComboBox c_oldlottery;
    java.util.Vector oldlottery=new java.util.Vector();
    private javax.swing.JComboBox c_oldmember;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel l_date;
    private javax.swing.JLabel l_memberid;
    private javax.swing.JTextField tf_address;
    private javax.swing.JTextField tf_amount;
    private javax.swing.JTextField tf_contact;
    private javax.swing.JTextField tf_date;
    private javax.swing.JTextField tf_fname;
    private javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_person;
    private javax.swing.JTextField tf_tamount;
    // End of variables declaration//GEN-END:variables

}
