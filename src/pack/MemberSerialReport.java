package pack;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MemberSerialReport.java
 *
 * Created on Dec 9, 2012, 2:40:04 PM
 */

/**
 *
 * @author shyam
 */
import javax.swing.*;

import javax.swing.table.*;
import java.awt.*;
import java.awt.event.AWTEventListener.*;
import java.util.*;
public class MemberSerialReport extends javax.swing.JInternalFrame {

    JFrame mainframe;
    /** Creates new form MemberSerialReport */
    public MemberSerialReport(JFrame mainframe) {
        super("Member Serial ReportS",true,true,true,true);
        this.mainframe=mainframe;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Dbcon db=new Dbcon();
        db.connect();
        try
        {
            db.rslt=db.stmt.executeQuery("select lottery_no from lottery where status=1");
            while(db.rslt.next())
            {
                lottery.addElement(db.rslt.getString(1));
            }

        }
        catch(Exception e){JOptionPane.showMessageDialog(mainframe,"Error"+e);}
        db.disconnect();
        c_lottery = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        l_status = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tf_date = new javax.swing.JTextField();
        bt_date = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        tf_from = new javax.swing.JTextField();
        tf_to = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bt_ok = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Member Serial Report");

        c_lottery.setModel(new javax.swing.DefaultComboBoxModel(lottery.toArray()));
        c_lottery.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c_lotteryItemStateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        l_status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_status.setText("Status");
        l_status.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l_status, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_status, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel12.setText("Select  Date :");

        tf_date.setEditable(false);
        tf_date.setFont(new java.awt.Font("Tahoma", 0, 16));
        tf_date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_dateActionPerformed(evt);
            }
        });

        bt_date.setText("...");
        bt_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_dateActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel13.setText("Serial :   From");

        tf_from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fromActionPerformed(evt);
            }
        });

        tf_to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_toActionPerformed(evt);
            }
        });

        jLabel2.setText("TO");

        bt_ok.setText("OK");
        bt_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_okActionPerformed(evt);
            }
        });

        jButton3.setText("print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(c_lottery, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_date, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_from, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_to, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bt_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_lottery, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tf_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_ok)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void c_lotteryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c_lotteryItemStateChanged
        // TODO add your handling code here:
        /*{
            DefaultTableModel model=null;
            Object datas[][]=null;//={{false,"aaa","ccc"},{false,"ddd","fff"}};
            Dbcon db=new Dbcon();
            db.connect();
            try {
                db.rslt=db.stmt.executeQuery("SELECT memberaccount.member_no,memberinfo.name,memberinfo.f_name,memberinfo.address,memberinfo.contact_no from lottery2.memberinfo,lottery2.memberaccount where memberinfo.member_id=memberaccount.member_id and memberaccount.status=1 and memberaccount.lottery_no='"+lottery.elementAt(c_lottery.getSelectedIndex())+"'");
                db.rslt.afterLast();
                int count=0;
                if (db.rslt.previous())count=db.rslt.getRow();
                datas=new Object[count][6];
                db.rslt.beforeFirst();
                count=0;
                while (db.rslt.next()) {
                    datas[count][0]=(count+1)+"";
                    datas[count][1]=lottery.elementAt(c_lottery.getSelectedIndex())+"-"+db.rslt.getString(1);
                    datas[count][2]=db.rslt.getString(2);
                    datas[count][3]=db.rslt.getString(3);
                    datas[count][4]=db.rslt.getString(4);
                    datas[count][5]=db.rslt.getString(5);
                    count++;
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            Object[] columnNamess = {"S.N.","Member ID","Name","Father's Name","Address","Contact No."};
            model = new DefaultTableModel(datas, columnNamess);

            table.setModel(model);
            //table.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
            db.disconnect();
            table.setModel(model);
            //table.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
            table.setRowHeight(30);
            table.setFont(new Font("Letter Gothic Std", Font.PLAIN, 15));

            db.disconnect();
        }
         * 
         */
}//GEN-LAST:event_c_lotteryItemStateChanged

    private void tf_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_dateActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tf_dateActionPerformed

    private void bt_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_dateActionPerformed
        // TODO add your handling code here:
        tf_date.setText(DateConverter.toDDMMYYYY(new DatePicker(mainframe).setPickedDate()));
    }//GEN-LAST:event_bt_dateActionPerformed

    private void tf_fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fromActionPerformed

    private void tf_toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_toActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_toActionPerformed

    private void bt_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_okActionPerformed
        // TODO add your handling code here:
        Dbcon db=new Dbcon();
        db.connect();
        Object data[][]=null;//={{false,"aaa","ccc"},{false,"ddd","fff"}};
        try
        {
            int i1=Integer.parseInt(tf_from.getText());
            int i2=Integer.parseInt(tf_to.getText());
            long debit=0,total=0;
            db.rslt=db.stmt.executeQuery("select memberaccount.member_no,memberinfo.name,sheet.recurring,sheet.fine,sheet.debit,sheet.credit,sheet.interest,total,order1 from sheet,memberinfo,memberaccount where memberinfo.member_id=sheet.member_id and memberaccount.member_id=memberinfo.member_id and  sheet.lottery_no='"+c_lottery.getSelectedItem()+"' and sheet.date='"+DateConverter.toYYYYMMDD(tf_date.getText())
+"' and order1>="+tf_from.getText()+" and order1<="+tf_to.getText()+"");
            db.rslt.afterLast();
                        int count=0;
                        if (db.rslt.previous())count=db.rslt.getRow();
                        data=new Object[count][9];
                        db.rslt.beforeFirst();
                        count=0;
                        while (db.rslt.next())
                        {
                                data[count][0]=db.rslt.getString(9);//(count+1)+"";
                                data[count][1]=lottery.elementAt(c_lottery.getSelectedIndex())+"-"+db.rslt.getString(1);
                                data[count][2]=db.rslt.getString(2);
                                data[count][3]=db.rslt.getString(3);
                                data[count][4]=db.rslt.getString(4);
                                data[count][5]=db.rslt.getString(5);
                                data[count][6]=db.rslt.getString(6);
                                data[count][7]=db.rslt.getString(7);
                                data[count][8]=db.rslt.getString(8);
                                if(db.rslt.getString(5)!=null)
                                    debit+=Long.parseLong(db.rslt.getString(5));
                                if(db.rslt.getString(8)!=null)
                                    total+=Long.parseLong(db.rslt.getString(8));
                                count++;
                        }
                        Object[] columnNamess = {"S.N.","Member ID","Name","Recurring","Fine","Debit","Credit","Interest","Balance"};
                        DefaultTableModel model = new DefaultTableModel(data, columnNamess);
                        
                        table.setModel(model);
                        //table.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
                       //db.disconnect();
                       table.setModel(model);
                        //table.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
                       table.setRowHeight(30);
                       table.setFont(new Font("Letter Gothic Std", Font.PLAIN, 15));
                       l_status.setText("Debit : "+debit+"    Total Deposite : "+total+"   Cash In Hand : "+(total-debit));
        }
        catch(Exception e)
        {
            System.out.println(e);
            JOptionPane.showMessageDialog(mainframe,"Enter From And To in Numeric Formate","Error",JOptionPane.ERROR_MESSAGE);
        }
        db.disconnect();
    }//GEN-LAST:event_bt_okActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model=(DefaultTableModel)table.getModel();
        Vector d=new Vector();
        // String header[]={"S.No.","Date","Recurring","Fine","Debit","Credit","Interest","Total Deposite","Balance"};
        String[] header = {"S.N.","Member ID","Name","Recurring","Fine","Debit","Credit","Interest","Balance"};
        String s2[][]=new String[table.getRowCount()][9];
        for (int i=0;i<table.getRowCount();i++) {
            s2[i][0]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(0));
            s2[i][1]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(1));
            s2[i][2]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(2));
            s2[i][3]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(3));
            s2[i][4]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(4));
            s2[i][5]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(5));
            s2[i][6]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(6));
            s2[i][7]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(7));
            s2[i][8]=(String)(((Vector)model.getDataVector().elementAt(i)).elementAt(8));

        }
        // String s1[]=null;//(Sttable.getTableHeader().getComponents();
        table t=new table(c_lottery.getSelectedItem()
+" Serial "+tf_from.getText()+"  To "+tf_to.getText()+", "+"Date :"+tf_date.getText(),header,s2);
        //t.printGradesTable();
        t.footerField.setText(t.footerField.getText()+","+l_status.getText());
        t.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_date;
    private javax.swing.JButton bt_ok;
    private javax.swing.JComboBox c_lottery;
    java.util.Vector lottery=new java.util.Vector();
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_status;
    private javax.swing.JTable table;
    private javax.swing.JTextField tf_date;
    private javax.swing.JTextField tf_from;
    private javax.swing.JTextField tf_to;
    // End of variables declaration//GEN-END:variables

}
